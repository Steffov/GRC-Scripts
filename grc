#!/bin/bash

		        echo "**********************************************"
                        echo "*    Welcome to Gridcoin wallet install      *"
			echo "*           and / or update script!          *"
                        echo "*                                            *"
			echo "*             What do you need?              *"
                        echo "**********************************************"

echo -n "(u)pdate? or a fresh (i)nstallation?:"
read upin
	if [ "$upin" == "installation" ] || [ "$upin" == "i" ]; then
		clear
			echo "******************1/4*************************"
			echo "* First installing tools and programs needed *"
			echo "* for compiling GRC Wallet from source code  *"
			echo "**********************************************";

sudo apt-get install git qt-sdk
	sudo apt-get install ntp git build-essential libssl-dev libdb-dev libdb++-dev libboost-all-dev libqrencode-dev libcurl4-openssl-dev curl libzip-dev libzip4 libboost1.58-all-dev libqt5webkit5-dev 
echo "";
			echo "******************2/4*************************"
			echo "* Now getting the source and clone it into ~/*"
			echo "**********************************************";
sleep 5
cd ~/
git clone https://github.com/gridcoin/Gridcoin-Research
echo "";
                        echo "******************3/4*************************"
                        echo "* Starting build process...                  *"
                        echo "**********************************************";
sleep 5
cd ~/Gridcoin-Research
	sed -i 's/QT += qaxcontainer/CONFIG += qaxcontainer/' gridcoinresearch.pro
			 if [[ -e $(which qmake-qt4) ]]; then
                                qmake-qt4 'USE_UPNP=-'
                                else
                                qmake 'USE_UPNP=-'
                        fi
                                make
					strip gridcoinresearch
						sudo install -m 755 gridcoinresearch /usr/bin/gridcoinresearch
echo "";
                        echo "******************4/4*************************"
                        echo "* Your Gridcoin wallet is now ready to use!  *"
			echo "*                                            *"
			echo "* Do you wish to download and use the latest *"
			echo "* Snapshot from official source?             *"
			echo "* (With the snapshot it'll take less time    *"
			echo "* for syncing the wallet!)                   *"
                        echo "**********************************************";
echo -n "(y)es or (n)o?: "
read snapshot

	if [ "$snapshot" == "yes" ] || [ "$snapshot" == "y" ]; 
			then
                               mkdir ~/.GridcoinResearch
				cd ~/.GridcoinResearch
				wget http://download.gridcoin.us/download/downloadstake/signed/snapshot.zip
				unzip snapshot.zip
				echo "";

	fi
	     	                echo "**********************************************"
	                        echo "* Do you like to check (start) your wallet   *"
				echo "* now?                                       *"
        	                echo "**********************************************";
				echo -n "(y)es or (n)o?: "
				read check
					if [ "$check" == "yes" ] || [ "$check" == "y" ]; then
        	        		   gridcoinresearch
					fi
 			                        echo "**********************************************"
                        		        echo "*     Thanks for crunching Boinc units       *"
			                        echo "*                   &                        *"
                                		echo "*            using Gridcoin!                 *"
			                        echo "**********************************************";
exit

	elif  [ "$upin" == "update" ] || [ "$upin" == "u" ]; then
			clear
			cd ~/Gridcoin-Research
			vchange=`git pull` 
			#version=`git reset --hard origin/master`

				if  [ "$vchange" == 'Already up-to-date.' ] ; then
                			echo "=============================================="
			                echo "       Gridcoin Wallet is up-do-date!         "
        	        		echo "=============================================="


exit
        fi
                echo `date` >> ~/Gridcoin-Research/grcs_vlogs.txt
                echo $vchange >> ~/Gridcoin-Research/grcs_vlogs.txt #Copies the git change information into the log file
		echo "=============================================="
		echo "         Stating update sequence..."
                echo "=============================================="

                read -p "Push enter to close the running Gridcoin wallet."
                killall gridcoinresearch
                echo  "Gridcoin wallet has been closed"
                echo -n " Did you install Boost manuel in the root directory (j/n)?: ";
                read  boost
                        if [  $boost == "j" ]; then
                               sed -i -e '35iBOOST_INCLUDE_PATH = /boost/boost_1_55_0/' \
                                       -e '36iBOOST_LIB_PATH = /boost/boost_1_55_0/stage/lib/' \
                                          gridcoinresearch.pro

                        fi
                                sed -i 's/QT += qaxcontainer/CONFIG += qaxcontainer/' gridcoinresearch.pro
                      	          chmod 755 src/leveldb/build_detect_platform
                        	        mkdir src/obj/zerocoin
						rm -f build/o.*
                        if [[ -e $(which qmake-qt4) ]]; then
                                qmake-qt4 'USE_UPNP=-'
                                else
                                qmake 'USE_UPNP=-'
                        fi
                                make
                        		strip gridcoinresearch
						chmod 755 gridcoinresearch
				echo "=============================================="
                                echo "Update done! Please start the Gridcoin wallet "
                                echo "=============================================="

                        exit

	fi
			echo "**********************************************"
                        echo "*            Script terminated!              *"
                        echo "**********************************************";

exit 0
